#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    hold-trigger-on-release;
    tapping-term-ms = <250>;
    quick-tap-ms = <175>;
    flavor = "tap-preferred";
    hold-while-undecided;
    retro-tap;
    hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    tapmod: tapmod {
        compatible = "zmk,behavior-hold-tap";
        label = "TAPMOD";
        bindings = <&none>, <&none>;

        #binding-cells = <2>;
        tapping-term-ms = <275>;
        flavor = "tap-preferred";
        quick-tap-ms = <175>;
        hold-trigger-key-positions = <27 28 29 30 34 35 36 37 0 1 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 58 4 3 2 5 6 7 8 9 10>;
        hold-trigger-on-release;
        retro-tap;
    };

    THUMBROWTAP: THUMBROWTAP {
        compatible = "zmk,behavior-hold-tap";
        label = "THUMBROWTAP";
        bindings = <&none>, <&none>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        hold-trigger-key-positions = <57 56 55 54 53 59 60 61 62 63>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1      &kp N2        &kp N3       &kp N4          &kp N5           &kp UP_ARROW     &kp N6       &kp N7           &kp N8       &kp N9         &kp N0               &kp MINUS
&kp TAB     &kp Q       &kp W         &kp E        &kp R           &kp T            &kp DOWN_ARROW   &kp Y        &kp U            &kp I        &kp O          &kp P                &kp BSLH
&kp CAPS    &mt LGUI A  &mt LALT S    &mt LSHFT D  &mt LCTRL F     &kp G            &kp LEFT_ARROW   &kp H        &mt RCTRL J      &mt RSHFT K  &mt LALT L     &mt RMETA SEMICOLON  &kp APOS
&mo 1       &kp Z       &kp X         &kp C        &kp V           &kp B            &kp RIGHT_ARROW  &kp N        &kp M            &kp COMMA    &kp DOT        &kp FSLH             &mo 2
&kp C_MUTE  &kp LCTRL   &kp LEFT_GUI  &mo 1        &kp LEFT_SHIFT  &kp BACKSPACE    &kp ENTER        &lt 2 SPACE  &kp RIGHT_SHIFT  &kp ENTER    &kp RIGHT_ALT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F12          &kp F1           &kp F2          &kp F3           &kp F4                &kp F5                  &mmv MOVE_UP     &kp F6     &kp F7      &kp F8      &kp F9         &kp F10           &kp F11
&kp PRINTSCREEN  &kp K_MUTE       &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &mmv MOVE_DOWN   &kp PG_UP  &kp K_BACK  &kp UP      &kp K_FORWARD  &kp MINUS         &kp EQUAL
&trans           &kp TILDE        &to 3           &trans           &trans                &mkp MB5                &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT    &kp DOWN    &kp RIGHT      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans           &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR       &rgb_ug RGB_SPI         &mmv MOVE_RIGHT  &trans     &trans      &kp INSERT  &kp F11        &kp F12           &mo 2
&kp C_MUTE       &trans           &trans          &trans           &trans                &trans                  &mkp LCLK        &trans     &trans      &trans      &trans         &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4        &mmv MOVE_UP     &kp F6             &kp F7          &kp F8            &kp F9                &kp F10                &trans
&trans     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT         &mmv MOVE_DOWN   &kp CARET          &kp AMPERSAND   &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&trans     &kp TILDE        &kp GRAVE     &kp BACKSLASH  &kp PIPE      &kp LEFT_BRACKET    &mmv MOVE_LEFT   &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp MINUS             &kp EQUAL              &kp RBRC
&trans     &sys_reset       &trans        &bootloader    &trans        &trans              &mmv MOVE_RIGHT  &trans             &kp LESS_THAN   &kp GREATER_THAN  &kp UNDERSCORE        &kp PLUS               &trans
&trans     &trans           &trans        &trans         &trans        &trans              &mkp LCLK        &trans             &trans          &trans            &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &trans  &trans      &trans     &trans          &to 0        &trans  &trans     &kp MINUS        &kp PLUS         &kp SLASH        &trans     &trans
&trans      &kp Q   &kp P       &kp E      &kp R           &kp T        &trans  &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans     &trans
&trans      &kp A   &kp S       &kp H      &kp F           &kp G        &trans  &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans     &trans
&mo 1       &kp Z   &kp X       &kp C      &kp L           &kp M        &trans  &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans     &trans
&trans      &trans  &kp DELETE  &kp LCTRL  &kp LEFT_SHIFT  &kp SPACE    &trans  &kp ENTER  &kp BACKSPACE    &kp KP_NUMBER_0  &kp PERIOD       &kp COMMA
            >;
        };
    };
};
